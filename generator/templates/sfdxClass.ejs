// Generated on <%= getCurrentFormatedDate() %> using <%= cliVersion %>. DO NOT MODIFY

using System.Diagnostics;
using System.IO;
using sfdx4csharpClient.Core;

namespace sfdx4csharpClient
{
    /// <summary>
    /// A client using the Salesforce command-line interface (Salesforce CLI).
    /// </summary>
    /// <remarks>
    /// In order to use this client, you need to install the Salesforce CLI on your machine.
    /// How to: https://developer.salesforce.com/docs/atlas.en-us.sfdx_setup.meta/sfdx_setup/sfdx_setup_install_cli.htm
    /// </remarks>
    public class GeneratedSfdxClient
    {<% _.each(classDefinitions, function(classDefinition) { %>
        public <%= classDefinition.className %> <%= classDefinition.fileName %> { get; }<% }) %>

        private readonly CommandRunner _cmdRunner;

        /// <summary>
        /// Initialize the modules that encapsulate the commands in the force namespace.
        /// </summary>
        /// <param name="path">File path to the SFDC CLI executable.</param>
        /// <param name="workingFolder">The working folder where to run sfdx commands.</param>
        public GeneratedSfdxClient(string path,
            string workingFolder = "")
        {
            Debug.Assert(!string.IsNullOrEmpty(path));
            Debug.Assert(File.Exists(path));
            Debug.Assert(string.IsNullOrEmpty(workingFolder) || Directory.Exists(workingFolder));

            _cmdRunner = new CommandRunner(path, workingFolder);
            CommandExecutioner executioner = new CommandExecutioner(_cmdRunner);<%
            _.each(classDefinitions, function(classDefinition) { %>
            this.<%= classDefinition.fileName %> = new <%= classDefinition.className %>(executioner);<% }) %>
        }

        /// <summary>
        /// Changes the working folder of the sfdx client.
        /// </summary>
        /// <param name="folderPath">The new working folder path where to run sfdx commands.</param>
        public void ChangeWorkingFolder(string folderPath)
        {
            Debug.Assert(!string.IsNullOrEmpty(folderPath));
            Debug.Assert(Directory.Exists(folderPath));
            _cmdRunner.WorkingFolder = folderPath;
        }
		
        /// <summary>
        /// Changes the home folder of the sfdx client. 
        /// This is the directory where it looks for the .sfdx folder
        /// </summary>
        /// <param name="homeFolderPath">The new home folder where the .sfdx folder is located, or null/empty to revert back to the default.</param>
        /// <remarks>Only works on Windows.</remarks>
        public void ChangeHomeFolder(string homeFolderPath)
        {
            Debug.Assert(string.IsNullOrEmpty(homeFolderPath) || Directory.Exists(homeFolderPath));
            _cmdRunner.HomeFolder = homeFolderPath;
        }
    }
}
